<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="connection setting" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ws_host" elementType="Argument">
            <stringProp name="Argument.name">ws_host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ws_port" elementType="Argument">
            <stringProp name="Argument.name">ws_port</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="device setting" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="deviceID" elementType="Argument">
            <stringProp name="Argument.name">deviceID</stringProp>
            <stringProp name="Argument.value">r1gCoLxHix</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="deviceKey" elementType="Argument">
            <stringProp name="Argument.name">deviceKey</stringProp>
            <stringProp name="Argument.value">c27999d777b928d49ab4462be3fd7f74021200d30bf960104355e081dd609e96</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="data channels" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="display_boolean" elementType="Argument">
            <stringProp name="Argument.name">display_boolean</stringProp>
            <stringProp name="Argument.value">display_boolean</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_integer" elementType="Argument">
            <stringProp name="Argument.name">display_integer</stringProp>
            <stringProp name="Argument.value">display_integer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_category" elementType="Argument">
            <stringProp name="Argument.name">display_category</stringProp>
            <stringProp name="Argument.value">display_category</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_integer" elementType="Argument">
            <stringProp name="Argument.name">display_integer</stringProp>
            <stringProp name="Argument.value">display_integer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_hex" elementType="Argument">
            <stringProp name="Argument.name">display_hex</stringProp>
            <stringProp name="Argument.value">display_hex</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_string" elementType="Argument">
            <stringProp name="Argument.name">display_string</stringProp>
            <stringProp name="Argument.value">display_string</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_gps" elementType="Argument">
            <stringProp name="Argument.name">display_gps</stringProp>
            <stringProp name="Argument.value">display_gps</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_gpio" elementType="Argument">
            <stringProp name="Argument.name">display_gpio</stringProp>
            <stringProp name="Argument.value">display_gpio</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_pwm" elementType="Argument">
            <stringProp name="Argument.name">display_pwm</stringProp>
            <stringProp name="Argument.value">display_pwm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_analog" elementType="Argument">
            <stringProp name="Argument.name">control_analog</stringProp>
            <stringProp name="Argument.value">control_analog</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_boolean" elementType="Argument">
            <stringProp name="Argument.name">control_boolean</stringProp>
            <stringProp name="Argument.value">control_boolean</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_category" elementType="Argument">
            <stringProp name="Argument.name">control_category</stringProp>
            <stringProp name="Argument.value">control_category</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_integer" elementType="Argument">
            <stringProp name="Argument.name">control_integer</stringProp>
            <stringProp name="Argument.value">control_integer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_float" elementType="Argument">
            <stringProp name="Argument.name">control_float</stringProp>
            <stringProp name="Argument.value">control_float</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_hex" elementType="Argument">
            <stringProp name="Argument.name">control_hex</stringProp>
            <stringProp name="Argument.value">control_hex</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_string" elementType="Argument">
            <stringProp name="Argument.name">control_string</stringProp>
            <stringProp name="Argument.value">control_string</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_gps" elementType="Argument">
            <stringProp name="Argument.name">control_gps</stringProp>
            <stringProp name="Argument.value">control_gps</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_gpio" elementType="Argument">
            <stringProp name="Argument.name">control_gpio</stringProp>
            <stringProp name="Argument.value">control_gpio</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_pwm" elementType="Argument">
            <stringProp name="Argument.name">control_pwm</stringProp>
            <stringProp name="Argument.value">control_pwm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_gamepad" elementType="Argument">
            <stringProp name="Argument.name">control_gamepad</stringProp>
            <stringProp name="Argument.value">control_gamepad</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_float" elementType="Argument">
            <stringProp name="Argument.name">display_float</stringProp>
            <stringProp name="Argument.value">display_float</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_image" elementType="Argument">
            <stringProp name="Argument.name">display_image</stringProp>
            <stringProp name="Argument.value">display_image</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_video" elementType="Argument">
            <stringProp name="Argument.name">display_video</stringProp>
            <stringProp name="Argument.value">display_video</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Web Socket" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1488524999000</longProp>
        <longProp name="ThreadGroup.end_time">1488524999000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="deviceKey" elementType="Argument">
              <stringProp name="Argument.name">deviceKey</stringProp>
              <stringProp name="Argument.value">none</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">&quot;${deviceKey}&quot; != &quot;&lt;EOF&gt;&quot;</stringProp>
        </WhileController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">file.txt</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">deviceID,deviceKey</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_boolean):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_boolean}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 1)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_integer):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="true">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_integer}&quot;,&quot;values&quot;:{&quot;value&quot;:555.999}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">false</boolProp>
            <stringProp name="connectionId"></stringProp>
            <stringProp name="responsePattern">1001</stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_float):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_float}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 999999)}.${__Random(1, 999999)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_hex):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_hex}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(30,ABCDEF0123456789)}&quot;}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_string):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_string}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789)}&quot;}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_GPIO):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_gpio}&quot;,&quot;values&quot;:{&quot;value&quot;:1}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (display_PWM):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_pwm}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 100)},&quot;period&quot;:${__Random(1, 100)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_boolean):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_boolean}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 1)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_integer):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_integer}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 100)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_float):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_float}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 999999)}.${__Random(1, 999999)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_hex):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_hex}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(30,ABCDEF0123456789)}&quot;}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_string):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_string}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789)}&quot;}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_GPIO):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_gpio}&quot;,&quot;values&quot;:{&quot;value&quot;:1}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="Upload Data (control_PWM):/deviceId/${deviceID}/deviceKey/${deviceKey}" enabled="false">
            <stringProp name="serverAddress">${ws_host}</stringProp>
            <stringProp name="serverPort">8000</stringProp>
            <stringProp name="implementation">RFC6455 (v13)</stringProp>
            <stringProp name="protocol">ws</stringProp>
            <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
            <stringProp name="contentEncoding">UTF-8</stringProp>
            <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_pwm}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 100)},&quot;period&quot;:${__Random(1, 100)}}}</stringProp>
            <stringProp name="connectionTimeout">5000</stringProp>
            <stringProp name="responseTimeout">2000</stringProp>
            <boolProp name="ignoreSslErrors">true</boolProp>
            <boolProp name="streamingConnection">true</boolProp>
            <stringProp name="connectionId">chen</stringProp>
            <stringProp name="responsePattern"></stringProp>
            <stringProp name="closeConncectionPattern"></stringProp>
            <stringProp name="proxyAddress"></stringProp>
            <stringProp name="proxyPassword"></stringProp>
            <stringProp name="proxyPort"></stringProp>
            <stringProp name="proxyUsername"></stringProp>
            <stringProp name="messageBacklog">3</stringProp>
            <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">&quot;${deviceKey}&quot; != &quot;&lt;EOF&gt;&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
